---
# ----------------------------------------------------------------------------------------
# -- Docs: https://github.com/cluster-apps-on-docker/spark-standalone-cluster-on-docker --
# ----------------------------------------------------------------------------------------
version: "3.6"




services:


    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
        ports:
            # AMQP protocol port
            - "${RABBITMQ_DEFAULT_PORT}:5672"
            # HTTP management UI
            - "${RABBITMQ_DEFAULT_MGMT}:15672"

    mongodb-primary:
        image: 'bitnami/mongodb:latest'
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_KEY=replicasetkey123

        volumes:
            - 'mongodb_master_data:/bitnami'

    mongodb-secondary:
        image: 'bitnami/mongodb:latest'
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD
            - MONGODB_REPLICA_SET_KEY

    mongodb-arbiter:
        image: 'bitnami/mongodb:latest'
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD
            - MONGODB_REPLICA_SET_KEY

    dbinit:
        image: dbinit
        build:
            context: .
            dockerfile: ./dbinit/Dockerfile
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD
            - DROP_EXISTING
            - APISERV_PORT


    web1:
        image: web
        build:
            context: ./web
            dockerfile: Dockerfile
        environment:
            - APISERV_PORT
        depends_on:
            - rabbitmq
        deploy:
            replicas: 1

    web2:
        image: web
        build:
            context: ./web
            dockerfile: Dockerfile
        environment:
            - APISERV_PORT
        depends_on:
            - rabbitmq
        deploy:
            replicas: 1

    dashboard:
        image: dashboard
        build:
            context: ./dashboard
            dockerfile: Dockerfile
        deploy:
            replicas: 1


    nginx_rproxy:
        image: bitnami/nginx
        deploy:
            replicas: 1
        ports:
            - "80:80"
            - "81:81"

        depends_on:
            - web1
            - web2
        volumes:
            - ./nginx_rproxy/web.conf:/opt/bitnami/nginx/conf/server_blocks/web.conf:ro
            - ./nginx_rproxy/dashboard.conf:/opt/bitnami/nginx/conf/server_blocks/dashboard.conf:ro
        healthcheck:
            test: ["CMD", "nginx", "-s", "reload"]
            interval: 2s


    apiserv:
        image: apiserv
        build:
            context: .
            dockerfile: ./apiserv/Dockerfile
        ports:
            - "${APISERV_PORT}"
        deploy:
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD
            - REFCODE_LENGTH

    testcaller:
        image: testcaller
        build:
            context: .
            dockerfile: ./testcaller/Dockerfile
        links:
            - rabbitmq
        deploy:
            update_config:
                parallelism: 1
                delay : 5s
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD

    testrunner:
        image: testrunner
        build:
            context: .
            dockerfile: ./testrunner/Dockerfile
        links:
            - rabbitmq
        deploy:
            update_config:
                parallelism: 1
                delay : 5s
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD

    dbhandler:
        image: dbhandler
        build:
            context: .
            dockerfile: ./dbhandler/Dockerfile
        links:
            - rabbitmq
        deploy:
            update_config:
                parallelism: 1
                delay : 5s
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGODB_INITIAL_PRIMARY_PORT_NUMBER
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD


volumes:
  mongodb_master_data:
    driver: local
...
