---
# ----------------------------------------------------------------------------------------
# -- Docs: https://github.com/cluster-apps-on-docker/spark-standalone-cluster-on-docker --
# ----------------------------------------------------------------------------------------
version: "3.6"




services:


    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
        ports:
            # AMQP protocol port
            - "${RABBITMQ_DEFAULT_PORT}:${RABBITMQ_DEFAULT_PORT}"
            # HTTP management UI
            - "${RABBITMQ_DEFAULT_MGMT}:${RABBITMQ_DEFAULT_MGMT}"

    mongo:
        image: mongo
        hostname: mongo
        ports:
            - "${MONGODB_PORT}:${MONGODB_PORT}"
        volumes:
            # - "./db/mongo-data3:/data/db"
            - "./db/mongo.key:/data/mongo.key"
        environment:
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT
            - DROP_EXISTING
            - WRITE_CASES

    dbinit:
        image: dbinit
        build:
            context: .
            dockerfile: ./dbinit/Dockerfile
        depends_on:
            - mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT
            - DROP_EXISTING
            - WRITE_CASES
    web:
        image: web
        build:
            context: ./web
            dockerfile: Dockerfile
        environment:
            - APISERV_PORT
        depends_on:
            - rabbitmq
        deploy:
            replicas: 1

    nginx_rproxy:
        image: nginx_rproxy
        build: ./nginx_rproxy
        deploy:
            replicas: 1
        ports:
            - "${NGINX_PORT}:${NGINX_PORT}"
        depends_on:
            - web


    apiserv:
        image: apiserv
        build:
            context: .
            dockerfile: ./apiserv/Dockerfile
        ports:
            - "${APISERV_PORT}:${APISERV_PORT}"
        deploy:
            replicas: 1
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT
            - REFCODE_LENGTH

    testcaller:
        image: testcaller
        build:
            context: .
            dockerfile: ./testcaller/Dockerfile
        links:
            - rabbitmq
        deploy:
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT

    testrunner:
        image: testrunner
        build:
            context: .
            dockerfile: ./testrunner/Dockerfile
        links:
            - rabbitmq
        deploy:
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT

    dbhandler:
        image: dbhandler
        build:
            context: .
            dockerfile: ./dbhandler/Dockerfile
        links:
            - rabbitmq
        deploy:
            replicas: 2
        environment:
            - RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS
            - RABBITMQ_DEFAULT_PORT
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGODB_PORT
...
